//=============================================================================
//
//  弾クラスマネージャー [Manager_Bullet.cpp]
//  Date   : 2022/1/19
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "Manager_Bullet.h"
#include "../../Actor/3D/ActorRB/Prop/Bullet.h"
#include "../../Manager/Manager_Game.h"
#include "../../Level/Base/Level.h"

//=============================================================================
// 定数宣言
//=============================================================================
constexpr int BULLET_MAX = 10;//弾最大数

//=============================================================================
// 初期化関数
//=============================================================================
void Manager_Bullet::Init()
{
	//最大数リザーブ
	m_Bullets.reserve(BULLET_MAX);

	//オブジェクトプール
	for (int i = 0; i < BULLET_MAX; i++)
	{
		//弾生成
		Bullet* bullet = Manager_Game::Instance()->GetLevel()->AddActor<Bullet>();
		m_Bullets.push_back(bullet);
	}

}

//=============================================================================
// 終了関数
//=============================================================================
void Manager_Bullet::Uninit()
{
	m_Bullets.clear();//クリア
}

//=============================================================================
// 弾生成関数
//=============================================================================
void Manager_Bullet::SpawnBullet(Vector3 _poition, Vector3 _velocity,Vector3 _rotation)
{
	//弾オブジェクトプール
	for (Bullet* bullet : m_Bullets)
	{
		//有効でない場合
		if (!bullet->GetActive())
		{
			//有効化
			bullet->SpawnBullet( _poition, _velocity, _rotation);
			return;
		}
	}
}
